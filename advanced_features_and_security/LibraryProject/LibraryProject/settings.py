"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bm^&sp(r8s95&#)&c+cj5ig56kf6805833i^fcfvwd*2_t64^x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    "relationship_app", 
]

DEBUG = False 





MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

SECURE_BROWSER_XSS_FILTER = True

X_FRAME_OPTIONS = "DENY"

# Prevent content sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# Cookie security - require HTTPS in production
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# If you want cookies to be HttpOnly (not accessible to JavaScript)
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = False  # keep False: CSRF token needs to be read by JS sometimes

# Security settings
X_FRAME_OPTIONS = "DENY"                 # Prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True       # Prevent MIME-type sniffing
CSRF_COOKIE_SECURE = True                # Send CSRF cookies only over HTTPS
SESSION_COOKIE_SECURE = True             # Send session cookies only over HTTPS

# HSTS (HTTP Strict Transport Security) - enable only on production with HTTPS
SECURE_HSTS_SECONDS = 31536000  # 1 year - enable when you have HTTPS
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# -----------------------
# Production security settings
# -----------------------

# IMPORTANT: set DEBUG = False in production
DEBUG = False

# Hosts allowed to serve your site (add your domain(s) here)
ALLOWED_HOSTS = ["yourdomain.com", "www.yourdomain.com"]

import os

ENV = os.environ.get("DJANGO_ENV", "development")  # "production" on live server

if ENV == "production":
    DEBUG = False
    SECURE_SSL_REDIRECT = True
    SECURE_HSTS_SECONDS = 31536000
else:
    DEBUG = True
    SECURE_SSL_REDIRECT = False
    SECURE_HSTS_SECONDS = 0

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")



# Redirect all HTTP -> HTTPS
SECURE_SSL_REDIRECT = True
# If you sit behind a proxy (nginx) that performs SSL termination, set SECURE_PROXY_SSL_HEADER:
# SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# HTTP Strict Transport Security (HSTS)
# Only enable long HSTS after verifying HTTPS works. Start with a low value for testing.
SECURE_HSTS_SECONDS = 31536000   # 1 year in seconds (set to 0 while testing)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Cookies: only send cookies via HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Make session cookie HttpOnly (not accessible to JS)
SESSION_COOKIE_HTTPONLY = True

# Browser protections
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = "DENY"
SECURE_CONTENT_TYPE_NOSNIFF = True

# Optional: force secure referrer policy (restricts Referer)
SECURE_REFERRER_POLICY = "no-referrer-when-downgrade"

SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "dev-secret")


AUTH_USER_MODEL = "bookshelf.CustomUser"


AUTH_USER_MODEL = "relationship_app.CustomUser"



ROOT_URLCONF = 'LibraryProject.urls'

LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "list_books"
LOGOUT_REDIRECT_URL = "login"


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "bookshelf.CustomUser"
